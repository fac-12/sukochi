{"dependencies":[{"name":"react"},{"name":"../utils/counter"},{"name":"./style.css"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HealthBar = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _counter = require(\"../utils/counter\");\n\nrequire(\"./style.css\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar HealthBar = exports.HealthBar = function (_React$Component) {\n  _inherits(HealthBar, _React$Component);\n\n  function HealthBar() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, HealthBar);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = HealthBar.__proto__ || Object.getPrototypeOf(HealthBar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      count: 100,\n      message: null,\n      imgUrl: null\n    }, _this.add = function () {\n\n      if (isNaN(_this.state.count)) {\n        _this.setState({ message: \"It's too late.\" });\n      } else {\n        _this.setState({ count: _this.state.count + 5 });\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(HealthBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState(function (prevState, props) {\n        var startTime = Date.now();\n        _this2.countdown = setInterval(function () {\n          var newCount = _this2.state.count - 1;\n          if (newCount < 0) {\n            newCount = \"I'm dead!\";\n            clearInterval(_this2.countdown);\n          }\n          if (newCount >= 120) {\n            newCount = \"I've exploded from eating too much! ðŸ’¥\";\n            _this2.setState({ imgUrl: \"https://media1.tenor.com/images/6732bf96f2e1f7453040259944bc0c5e/tenor.gif?itemid=3683672\" });\n            clearInterval(_this2.countdown);\n          }\n\n          _this2.setState({ count: newCount });\n        }, 500);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var img = this.state.imgUrl;\n      return _react2.default.createElement(\n        \"div\",\n        { className: \"healthDiv\" },\n        _react2.default.createElement(\n          \"div\",\n          { className: \"healthText\" },\n          \"Health: \",\n          this.state.count\n        ),\n        _react2.default.createElement(\n          \"button\",\n          { className: \"healthButton\", onClick: this.add },\n          this.state.message ? this.state.message : \"Feed me!\"\n        ),\n        img ? _react2.default.createElement(\"img\", { className: \"healthGif\", src: img }) : _react2.default.createElement(\"div\", { className: \"null\" })\n      );\n    }\n  }]);\n\n  return HealthBar;\n}(_react2.default.Component);"},"hash":"ac497865baf2cce4ed48ba670a673320"}